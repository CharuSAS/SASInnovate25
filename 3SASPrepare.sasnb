[{"kind":1,"language":"markdown","value":"##### Concatenate North American(exclude Alaska) and Mexican BumbleBee data","outputs":[]},{"kind":1,"language":"markdown","value":"Know thy data using PROC CONTENTS. Before concatenating tables, first ensure that both datasets have the same structure (i.e., same variable names and types).","outputs":[]},{"kind":2,"language":"sas","value":"proc contents data=dst1;\nrun;\nproc contents data=dst2;\nrun;","outputs":[]},{"kind":1,"language":"markdown","value":"Concatenate the North American and Mexican Bumblebee data using the SET statement","outputs":[]},{"kind":2,"language":"sas","value":"data dsconc;\nset dst1 dst2;\nrun;","outputs":[]},{"kind":1,"language":"markdown","value":"Why did the concatenation fail?\n\nDuring the Access phase, we used PROC IMPORT to convert CSVs into SAS datasets. By default, PROC IMPORT \"guesses\" the data structure by examining the first 20 rows to determine variable types and lengths. It assigns the most prevalent data type (numeric or character) to each column. If most of the first 20 rows are missing, SAS defaults to the character data type, and any subsequent numeric values are set to missing. This is why the column occurenceID defined as Character in the Mexican bumblebee data conflicts with the numeric OccurenceId in the North American Bumblebee dataset.   The DATA step, however, offers more control, granularity, and precision for importing data","outputs":[]},{"kind":2,"language":"sas","value":"data dst1;\ninfile \"/workspaces/myfolder/SASPythonDataScientists/pattern_decline_N_American_Bumblebees.csv\"  dsd firstobs=2;\ninput \nid \ninstitutionCode : $8. \ncollectionCode : $4. \nbasisOfRecord : $17.  \noccurrenceID :$9.\ncatalognumber: $12. \nrecordedBy $\nyear\nmonth \nday \ncountry :$6. \nstateProvince  : $16.\ncounty : $17.\nlocality  : $37. \nverbatimLatitude  \nverbatimLongitude \nidentifiedBy : $18.\nscientificName  : $20. \nkingdom  : $8. \nphylum  : $10. \nclass : $7. \norder  : $11. \nfamily  : $6. \ngenus :  $6. \nspecificEpithet : $13. \nscientificNameAuthorship : $13. \n;\n\nrun;\n\n\ndata dst2;\ninfile \"/workspaces/myfolder/SASPythonDataScientists/pattern_decline_Mexican_Bumblebees.csv\"  dsd firstobs=2;\ninput \nid \ninstitutionCode : $8. \ncollectionCode : $4. \nbasisOfRecord : $17.  \noccurrenceID :$9.\ncatalognumber: $12. \nrecordedBy $\nyear\nmonth \nday \ncountry :$6. \nstateProvince  : $16.\ncounty : $17.\nlocality  : $37. \nverbatimLatitude  \nverbatimLongitude \nidentifiedBy : $18.\nscientificName  : $20. \nkingdom  : $8. \nphylum  : $10. \nclass : $7. \norder  : $11. \nfamily  : $6. \ngenus :  $6. \nspecificEpithet : $13. \nscientificNameAuthorship : $13. \n;\nrun;\n","outputs":[]},{"kind":1,"language":"markdown","value":"Now lets see the metadata of the 2 tables, and pay careful attention to the offending type mismatch of the column OccurenceId","outputs":[]},{"kind":2,"language":"sas","value":"proc contents data=dst1 varnum;\nrun;\nproc contents data=dst2 varnum;\nrun;","outputs":[]},{"kind":1,"language":"markdown","value":"Let's now concatenate the 2 tables (filtering out Alaska from the North American Dataset)","outputs":[]},{"kind":2,"language":"sas","value":"data dsconc;\nset dst1(where=(country <> 'Alaska')) dst2;\nrun;","outputs":[]},{"kind":1,"language":"markdown","value":"Merging datasets\nWe'd like to be clear about the common names, as scientific names of Bombus doesnt mean anything to the common eye\nSo we'll merge the big NA & mexican concatenated dataset with the common names look up table.","outputs":[]},{"kind":2,"language":"sas","value":"proc contents data=dsconc;\nrun;","outputs":[]},{"kind":2,"language":"sas","value":"proc contents data=dst3;\nrun;","outputs":[]},{"kind":2,"language":"sas","value":"data dsmerge;\n    merge dsconc dst3;\n    by scientificname;\nrun;","outputs":[]},{"kind":1,"language":"markdown","value":"prepping the datasets for merge by running a PROC SORT","outputs":[]},{"kind":2,"language":"sas","value":"proc sort data=dsconc;\n    by scientificname;\nrun;\nproc sort data=dst3;\nby scientificname;\nrun;","outputs":[]},{"kind":2,"language":"sas","value":"data dsmerge;\n    merge dsconc(in=inc) dst3(in=ind);\n    by scientificname;\n    if inc and ind;\nrun;","outputs":[]},{"kind":2,"language":"sas","value":"proc contents data=dsmerge;\nrun;","outputs":[]}]